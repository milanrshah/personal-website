name: Deploy to EC2

on:
  push:
    branches:
      - main  # or your default branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Debug SSH Setup
        run: |
          echo "Setting up SSH connection..."
          echo "EC2 Host: ${{ secrets.EC2_HOST }}"
          ssh-add -l
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no -vvv ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'echo "SSH connection successful"'

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
            set -e
            cd /home/ubuntu/personal-website/personal-website

            # Pull latest changes
            git pull

            # Create virtual environment if it doesn't exist
            if [ ! -d "venv" ]; then
              echo "Creating virtual environment..."
              sudo apt-get update
              sudo apt-get install -y python3-venv
              python3 -m venv venv
            fi

            # Activate virtual environment and install dependencies
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --break-system-packages

            # Copy production environment file if it doesn't exist
            if [ ! -f .env.production ]; then
              cp .env.example .env.production
            fi

            # Restart the Flask application
            sudo systemctl restart flask-app

            # Check service status
            sudo systemctl status flask-app --no-pager
EOF 