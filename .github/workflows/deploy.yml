name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Debug SSH Setup
        run: |
          echo "Setting up SSH connection..."
          echo "EC2 Host: ${{ secrets.EC2_HOST }}"
          ssh-add -l
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no -vvv ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'echo "SSH connection successful"'

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST 'cd /home/ubuntu/personal-website/personal-website && rm -f gunicorn_config.py && git pull && echo "bind = \"0.0.0.0:5000\"" > gunicorn_config.py && echo "workers = 3" >> gunicorn_config.py && echo "timeout = 120" >> gunicorn_config.py && if [ ! -d "venv" ]; then echo "Creating virtual environment..." && sudo apt-get update && sudo apt-get install -y python3-venv && python3 -m venv venv; fi && source venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt --break-system-packages && if [ ! -f .env.production ]; then cp .env.example .env.production; fi && sudo chown ubuntu:ubuntu .env.production && chmod 644 .env.production && echo "DB_PASSWORD=personal-website-db" >> .env.production && sudo systemctl restart flask-app && sudo systemctl status flask-app --no-pager' 